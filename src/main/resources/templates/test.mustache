<!doctype html>
<html lang="ko">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>

    <!-- Mustache가 서버값을 찍어줍니다 -->
    <meta name="toss-client-key" content="{{tossClientKey}}">
    <meta name="toss-success-url" content="{{successUrl}}">
    <meta name="toss-fail-url" content="{{failUrl}}">

    <title>Toss Payments Demo</title>

    <!-- 여기서 바로 스크립트 작성 가능 -->
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const meta = (name) => document.querySelector(`meta[name="${name}"]`)?.content ?? "";
            const clientKey = meta('toss-client-key');
            const successUrl = meta('toss-success-url') || 'http://localhost:8090/success';
            const failUrl = meta('toss-fail-url') || 'http://localhost:8090/fail';

            if (!clientKey) {
                console.error('toss clientKey가 비어 있습니다. application.yml 확인');
                return;
            }

            try {
                await loadScript('https://js.tosspayments.com/v2');
            } catch (e) {
                console.error('TossPayments SDK 로드 실패:', e);
                alert('결제 스크립트를 불러오지 못했습니다.');
                return;
            }

            if (typeof window.TossPayments !== 'function') {
                console.error('TossPayments 전역이 없습니다.');
                return;
            }

            const widgets = window.TossPayments(clientKey).widgets({ customerKey: 'user-001' });

            await widgets.setAmount({ currency: 'KRW', value: 1000 });
            await widgets.renderAgreement({ selector: '#agreement' });
            await widgets.renderPaymentMethods({ selector: '#payment-widget' });

            document.getElementById('pay').addEventListener('click', async () => {
                try {
                    await widgets.requestPayment({
                        orderId: 'order-' + Date.now(),
                        orderName: '테스트 결제',
                        successUrl,
                        failUrl
                    });
                } catch (e) {
                    console.error(e);
                    alert(e?.message || '결제 요청 실패');
                }
            });
        });

        function loadScript(src) {
            return new Promise((resolve, reject) => {
                const s = document.createElement('script');
                s.src = src;
                s.async = true;
                s.onload = () => resolve();
                s.onerror = () => reject(new Error('Failed to load ' + src));
                document.head.appendChild(s);
            });
        }
    </script>
</head>
<body>
<h1>결제 테스트</h1>
<div id="agreement"></div>
<div id="payment-widget"></div>
<button id="pay">결제하기</button>
</body>
</html>
